---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ include "workspace-operator.serviceAccountName" . }}
  labels:
    {{- include "workspace-operator.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
rules:
  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [mantis-app.regelcloud.com]
    resources: [clusterkopfpeerings]
    verbs: [list, watch, patch, get]
  # Framework: crds access
  - apiGroups: [apiextensions.k8s.io]
    resources: [customresourcedefinitions]
    verbs: [list, watch]
  # Framework: admission webhook configuration management.
  - apiGroups: [admissionregistration.k8s.io/v1, admissionregistration.k8s.io/v1]
    resources: [validatingwebhookconfigurations, mutatingwebhookconfigurations]
    verbs: [create, patch]
  # Application: admin access for watching cluster-wide workspaces.
  - apiGroups: [mantis-app.regelcloud.com]
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: [namespaces]
    verbs: [list, watch]
  - apiGroups: ["", networking.k8s.io, apps]
    resources: ["*"]
    verbs: [list, watch,create, delete, patch,get ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "workspace-operator.serviceAccountName" . }}-cluster
  labels:
    {{- include "workspace-operator.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "workspace-operator.serviceAccountName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "workspace-operator.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ include "workspace-operator.serviceAccountName" . }}
  labels:
    {{- include "workspace-operator.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
rules:
  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [mantis-app.regelcloud.com]
    resources: [clusterkopfpeerings]
    verbs: [list, watch, patch, get]
  # Framework: crds access
  - apiGroups: [apiextensions.k8s.io]
    resources: [customresourcedefinitions]
    verbs: [list, watch]
  # Framework: admission webhook configuration management.
  - apiGroups: [admissionregistration.k8s.io/v1, admissionregistration.k8s.io/v1]
    resources: [validatingwebhookconfigurations, mutatingwebhookconfigurations]
    verbs: [create, patch]
  # Application: admin access for watching cluster-wide workspaces.
  - apiGroups: [mantis-app.regelcloud.com]
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: [namespaces]
    verbs: [list, watch]
  - apiGroups: ["", networking.k8s.io, apps]
    resources: ["*"]
    verbs: [list, watch,create, delete, patch,get ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "workspace-operator.serviceAccountName" . }}-namespaced
  labels:
    {{- include "workspace-operator.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "workspace-operator.serviceAccountName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "workspace-operator.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
